*** 2025-02-14 (금) 수업필기 ***


* 포트폴리오 미리 미리 준비하기

* 오늘 JS 수업 : 문자열

- charAt(i) = 문자열[i]

- indexOf(문자열, 몇 번째 그룹인지)

- startsWith(문자열,  인덱스 위치) 대소문자를 반드시 구별해야 함. 해당 문자열로 시작하는지에 대한 여부를 boolean(논리형) 값으로 판단 및 반환한다. 

- include(문자열) => 해당 문자열이 있으면 true, 없으면 false값을 반환 

- trim(문자열) => 특정 문자열의 앞 뒤 여백을 없애고자 할 때 사용.
- trimStart(문자열) => 특정 문자열의 앞쪽 공백만 없애줌
- trimEnd(문자열) => 특정 문자열의 뒤쪽 공백만 없애줌 

- toUpperCase()  => 모든 문자열을 모두 대문자로 바꿔줌
- toLowerCase()  => 모든 문자열을 모두 소문자로 바꿔줌

- substring(인데스값)  =>  인데스 값부터 빈 문자열을 없애고 해당 문자열의 마지막까지 모두 추출함.
** substring(1번 인자,  2번 인자)   =>  1번 인자 = 시작할 인자값, 2번 인자 = 끝날 인자값 BUT 본인의 인자 값보다 바로 앞까지 추출함(0~3까지 찾아오겠다는 뜻) 본인이 바라는 인자값 보다 + 1 해서 써야 한다는 뜻이기도 함.   =>  1번 인자값으로 음수를 받게 될 경우, 무조건 1번 인자값을 0으로 인식함. 음수를 무조건 0으로 인식함.


- slice(인데스값)  =>  substring과 똑같은 역할을 함. 나중에 나온 문법임. 
** slice(1번 인자,  2번 인자)   =>  1번 인자값으로 음수를 받을 수 있음. 양수는 왼쪽부터 / 음수는 오른쪽부터 인식하게 만드는 방법임.
마지막 문자열은 -1임. 
// 요즘 더 많이 씀.

- split(구분자)  => 특정 문자열에서 해당 구분자를 기준으로 각각 아이템을 구성해서 새로운 배열로 만들어주는 메서드 함수.
@@  ""과 " "은 다른 것이다.  
@@  ""  =>  문자 하나하나를 잡아서 분리해라
@@  " "  =>  빈 문자열을 기준으로 삼으라는 의미.





--------------------------------------------------------------------------------------------------

<button id="token-button" disabled>인증번호 전송</button>
disabled 버튼 비활성화.















