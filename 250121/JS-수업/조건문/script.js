// 조건문 : 어떤 조건에 부합하냐, 부합하지 않는냐에 따라서 실행시킬 실행명령을 별도로 관리 하는 것.

// 조건문이 실행되기 위해서는 문법을 따라야 함
// 조건식 & 실행문
//
//
//
// if문 : 만약 ~라면 (선택지 1개)
// if ~else문 : 만약 ~라면, 하지만 만약 ~ 아니라면 (선택지 2개)
// else if 문 : 만약 ~이거라면, 혹시 아니면 ~은? => 더 다양한 선택지주기 (3개이상 선택지)
// switch 문 : 여러가지의 선택지를 제공하고, 해당 선택지 가운데에서 어떤 한가지를 선택 했을 때 실행. 결과값을 도출 할 떄 사용. ( 다양한 선택지)
//

//
// if(조건식) { 실행문 }

// if (10 > 5) { console.log("10은 5보다 크다"); } // 재 사용이 불가능 한 코드

// const num01 = 10;
// const num02 = 5;
// if (num01 > num02) {console.log(`${num01}은 ${num02}보다 크다`);} // 재 사용이 가능한 코드

// const num01 = Number(prompt("첫번째 숫자를 입력하세요!"));
// const num02 = Number(prompt("두번째 숫자를 입력하세요!"));
// if (num01 > num02) {
//  console.log(`${num01}은 ${num02}보다 큽니다`); } // 확장성이 있는 코드 => 만약 사용자가 입력된 두번째 숫자가 더 크면 조건문은은 실행되지 않는다.

// const num01 = Number(prompt("첫번째 숫자를 입력하세요!"));
// const num02 = Number(prompt("두번째 숫자를 입력하세요!"));
// if (num01 > num02) {
// console.log(`${num01}은 ${num02}보다 큽니다`);} // 확장성이 있는 코드
//=> 만약 사용자가 입력된 두번째 숫자가 더 크면 조건문은은 실행되지 않는다.

// if ~else문 : 만약 ~라면, 하지만 만약 ~ 아니라면
//
// const num01 = Number(prompt("첫번째 숫자를 입력하세요!"));
// const num02 = Number(prompt("두번째 숫자를 입력하세요!"));
// if (num01 > num02) {
//   console.log(`${num01}은 ${num02}보다 큽니다`);
// } else {
//   console.log(`${num02}은 ${num01}보다 큽니다`);}

//=> 만약 사용자가 입력된 두번째 숫자가 더 크면 조건문은은 실행되지 않는다.

const num01 = 10;
const num02 = 5;

if (num01 > num02) console.log(`${num01}은 ${num02}보다 큽니다`);
else console.log(`${num02}은 ${num01}보다 큽니다`);

// => 실행문에 중괄호를 쓰지 않아도 성립된다.
// {return } <-- 중괄호 안에 return이 숨겨져 있음 중괄호를 쓴 것은 실행문으로 쓴 것
// 표현식으로 쓰는 것은 중괄호를 쓰지 않겠다는 것.

// 프로그래밍 언어 = CS(컴퓨터 공학)
// 전통적으로 프로그래밍 언어을 2가지 부류로 나눈다면
// 실행문 지향언어 vs 표현식 지향언어
// 대부분이 프로그래밍 언어는 = 실행문 지향언어
// C언어가 대표적인 프로그래밍 언어 // 자바 => '객체지향'언어 => 자바스크립트도 실행문 지향언어
// 함수 선언, 호출 => 로컬컴퓨터 CPU 에서 실행 됨 => 실행된 결과를 개발자에게 알려주지 않음. => return 으로 계속 값을 가져와야 함함
// 표현식 지향 언어 => 루비 // 코틀린(안드로이드 앱 개발 언어)
// 자바스크립트 => 실행문 & 표현식 모두 사용 할 수 있는 언어 => 다중 패러다임 언어 (초심자들이 공부하기 편하다는 뜻이기도 함)

// {return } <-- 중괄호 안에 return이 숨겨져 있음 중괄호를 쓴 것은 실행문으로 쓴 것
// 표현식으로 쓰는 것은 중괄호를 쓰지 않겠다는 것.
