* 2025 - 01 - 20 - grid 수업 *


* grid : 사전에 몇 행 몇 열로 서비스를 만들것인가? 를 명확해야하며 & 수정 및 변경이 최소화 될 경우 사용하는 박스 구조 속성
* 반응형이다.

---------------------------------------------------------------------------

display: grid; 를 줘도 변화가 없음
- flex는 주자마자 일렬로 자동정렬됨.

grid-template-columns: auto auto;
2열인데 각각 50% : 50%으로 만들겠다.

grid-template-columns: auto auto auto;
3열인데 각각 50% : 50% : 50%으로 만들겠다.

grid-template-columns: auto 200px auto;
3열인데 가운데는 200px 고정값, 나머지는 부모의 50% 주겠다.


frection : 파편 || 조각
1fr 1조각으로 가져가겠다.

grid-template-columns: 1fr 1fr 1fr;
1/3 : 1/3 : 1/3 으로 나눠가지겠다.


grid-template-rows: 100px 200px;
2행을 주고 행 마다의 높이 값을 정한다.

----------------------------------------

grid-template-columns: 몇개의 열을 만들것인가
grid-template-rows: 몇개의 행을 만들것인가.

----------------------------------------

축약

grid: 100px 200px / auto auto auto;

grid: grid-template-rows / grid-template-columns

-------------------------------------------------------------------------------

간격주기

grid-row-gap: 30px;
grid-column-gap: 30px;
=>  grid-gap: 30px 30px; => grid-gap: 30px;

-------------------------------------------------------------------------------

그리드는 각각의 열을 아이템으로 보고 justify-items로 위치값을 줄 수 있다.
justify-items: start / center / end 사용 가능

수직 측에서의 정렬
align-items: start / center / end 사용 가능

-------------------------------------------------------------------------------

grid-template-columns: auto auto; 일 때 
justify-content를 쓰게 되면 하나로 뭉쳐지게 됨.
부모 요소에서 안에서 컨텐츠 덩어리로 가져가게 함.

justify-items은 하나의 아이템으로 다루겠다.


1fr은 평상시에는 차이가 없음. 그러나 하나의 컨텐츠로 다룰 수 없음
내부를 각각의 아이템으로 다루겠다고 할때 씀

이것이 auto fr차이


------------------------------------------------------------------------------

grid-template-columns: auto auto; 일 때 
justify-content: space-between; 등등 문법을 다 쓸 수 있음
align-content: space-between; grid는 이것 까지 쓸 수 있음.


------------------------------------------------------------------------------

&:nth-child(2) {
justify-self: end;
align-self: end; }

자식요소에서 독립적인 위치 속성을 주고 싶을 때

* justify-self : 독단적으로 좌우 위치 값을 줄 수 있다.
* align-self: 독단적으로 위아래 위치 값을 줄 수 있다.

-------------------------
자식요소 중 하나에 

justify-self: stretch;
align-self: stretch;

부모요소의 full로 쓰겠다는 의미가 됨. 꽉 차게 됨.

------------------------------------------------------------------------------

* 기본 속성을 이해 후 그리드를 쓰는 이유 수업 *

grid-column-start: 1;
grid-column-end: 3;
(라인 기준으로 첫번째 줄에서 세번째 줄까지)두개의 열을 병합시키겠다.

축약 
grid-column: 1/3;

= grid-column: 1 / span 2;
span은 공간을 뜻함. 1번 방을 공간 2개를 써라.


grid-column: 2 / 4;
= grid-column: 2 / span 2;
= 2번 방을 공간 2개를 써라.

열과 행 합치기
1~7번 방
grid-row-start: 1;
grid-row-end: 4;
=grid-row: 1/5;
= grid-row: 1 / span 4;
를 쓰면 이상하게 됨.
그리드는 예측이 어려우니 계속 값을 실제로 입력해보면서 값을 수정해줘야 한다. 이 경우는 grid-row-end: 5;로 한다.


grid-column-start: 2;
grid-row: 1/5;
* 그리드를 중간에서 병합하려면 grid-column-start로 몇번쨰 열인지 명확히 선언 해야 한다.

----------------------------------------

grid-row: 1/5;
grid-column: 2 / span 4;
= grid-area: 1/2 / 5/6;  // 로 한줄에 쓸 수 있다.

----------------------------------------


grid-row: 4; ==> 6번 요소를 4번째 줄로 넣을 수 있다.


----------------------------------------

grid-area: item; 어떤 요소에 이름을 넣을 수 있다.
부모요소에 
grid-template-areas: " item item item item item";
이러면 1열은 풀로
2번 열은 5개의 행이 생김










테일윈드 기반의 그리드와 플렉스는 대단함
























