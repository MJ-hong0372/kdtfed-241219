*2025-01-07 (화) 수업 필기

* CSS 속성 Last

1) 단위속성 : px / % / em / rem / vw / vh /max min-width
2) 색상속성 : rgb rgba hex
3) 가시속성 : display / visibility 
4) 박스속성 : box-sizing / margun / padding
5) 테두리속성 : border / border-radius
6) 배경속성 : background-color / -imge / -position / size / -repeat / attachment
7) 폰트속성 : font-size / -weight / style / line-height / -family
구글 폰트 가져올 시 @import로 가져오는게 더 빠름

외ㅣ부 페이지 - 개발자도구 - 네트워크 - 폰트 - 새로고침 - 다운로드 후 root 폴더에 넣기 > style 속에 원하는 폰트 파일 가져오기
@font-face {
        font-family: cjone;
        src: url(./font/폰트파일명);
      }

--------------------------------------------------------------------------------------

8) 위치속성 : 
- static : 정적인 // 움직임에 대한 변수가 존재 하지 않는다. > 어떠한 태그 요소를 작성 하던 간에 기본적인 default position 속성은 static 임. > 반응형 제작 중 속성을 다른 것으로 바꿨을 때, 모바일이나 태블릿으로 사이즈 변경 시에 제 자리를 찾으라고 주는 속성. 

- relative : 상대적인 // 자식 요소 중 position absolute가 있는 경우 부모요소에 relative를 줘야 한다. // 상대 좌표 값 // 원래 있어야 하는 좌표값(static) 상대적 기준으로 상하좌우로 이동을 시킬 수 있음. // 웹 좌표계는 오른쪽과 밑으로 움직여야 양수지만, position은 현 위치에서 안쪽으로 들어올수록 양수 값을 넣는다. 두 값이 반대로 움직임. // 위치를 줄 때 불필요하게 값을 높게 줘야 하는 경우가 많음

- absolute : 절대적인 // 가장 최상위 부모가 기준이 됨. // 기준 값인 부모로부터 상하좌우 값을 줄 때 씀 // 만약 새 부모를 정할 때, 부모라는 기준을 알려주기 위해 바로 상위 부모 요소에 position에 relative 값을 주는 편의상 주는 것임 // 부모 요소에 relative 값을주지 않으면 default 부모 속성은 최상의 요소임 보통 body // 만약 부모 요소 중 그 누구도 relative 속성을 가지고 있지 않는 경우에는 최상위 루트 태그를 중심으로 절대 위치좌표값을 가지게 된다. 만약 부모 요소 중 relative 속성으로 갖고 있다면 해당 부모를 기준으로 절대 위치 좌표값을 갖게 됨. // 부모요소에 absolute를 주고 자식에게 absolute를 줘도 됨. 부모값이 absolute 값을 가지면 그 자리에서 나의 좌표값을 초기화 하겠다라는 의미도 있음. absolute 아래에 absolute가 나와도 됨.
 
- fixed : 고정된 // 주로 쇼핑몰 내 날개 배너 같이 특정 포지션에 고정된 형태로 정보를 제공해주고자 하는 경우 사용됨

- sticky : 끈적한 // sticker // 특정 좌표가 되면 스티커처럼 설정된 좌표에 붙음 // 부모 요소가 끝나면 같이 끝남 // 평상시에는 static처럼 작동하다가 특정 이치 좌효에 도착하는 순간 마치 끈끈한 스티커처럼 작용한다.

--------------------------------------------------------------------------------------

- z-index : Z축 앞으로 튀어나올수록 양수 / 뒤로 보낼 때 음수, -1처럼 써서 뒤로 보내도 됨.

- overflow: hidden;  // 부모요소 밖에 나가는 것은 감춘다.
- overflow: scroll; // 부모요소 밖에 나가는 것은 스크롤로 보여준다.

--------------------------------------------------------------------------------------

9) float 속성 : 부유하다 // 표류하다 ==> 타블로이드 형식 레이아웃을 정렬해야하는 상황이 과거에는 많았음. 기사식 레이아웃 구성.
> 무분별한 상하좌우 정렬로 인한 반응형 페이지 대응이 쉽지 않아짐. => 비효율적인 코드량이 많았음.
>CSS3 > flex // grid 로 대체 됨. 
float 사용 후 부모요소에 overflow: hidden;를 항상 써야 했음.
=> 대체 방식 : 부모요소에 display: flex; 를 쓰면 됨. 혹은
display: grid;
grid-template-columns: repeat(2 1fr); 이나 grid-template-columns: 200px 1fr;로 쓰면 됨 

--------------------------------------------------------------------------------------

10) gradient 속성 : background: linear-gradient( 각도, 시작색상 투명도, 중간색상 투명도, 끝나는 색상 투명도 )
- https://webgradients.com/ 등의 페이지에서 CSS 카피

--------------------------------------------------------------------------------------

상향식 방식 : 작은 단위에서부터 큰 단위로 점진적으로 구조화 코딩


gnb : Gloval Navigation Banner
> 제품 서비스의 메인 네비게이션 // 전역 

lnb : Local Navigation Banner // 지역 // 세부적

--------------------------------------------------------------------------------------

부모요소 { display: flex;
	자식요소 { flex: 1; text-align: center; } 
}
flex: 1 > 2개 중 1개, 즉 50% 영역을 달라
부모가 flex를 가지고 있으면 자식은 block 요소가 된다.


display: flex; 자식요소 너비를 강제로 줄이는 속성이 있음
flex-wrap: wrap; 자식요소의 너비를 보장해주겠다는 의미
--------------------------------------------------------------------------------------

&:hover { cursor: pointer; }

--------------------------------------------------------------------------------------


strong {
                display: inline-block; -> 인라인 요소를 인라인블럭으로 바꿔
                white-space: nowrap; -> 알아서 줄바꿈 하지 마!
                width: 120px; -> 너비가 안 먹혔다 : 인라인 요소라는 뜻
                overflow: hidden; -> 너비 넘어가는 거 숨겨!
                text-overflow: ellipsis; -> 말줄임표로 줄여줘!
}

--------------------------------------------------------------------------------------

* Deployment 배포 : 

- Server : 타인에게 내가 만든 웹 페이지 정보를 보여주기 위해서 원격의 공간// 사적인 공간(나만 볼 수 있는 공간)에 저장을 해야 하는데, 그 공간을 부르는 말.

- Google firebase // *best 방식* // node.js 기반
- git-hub 기반으로 둔 netify 

- git-hub // git 원격 저장이 main이라 호스팅 하기 불안정

- dothome (*무료 서버 임대) // FTP  = File Tranfer Protocol // 고전적 방식
- cafe24 // 네이버 인수 후 까다로워짐
- fly.io
- Heroku
- prisma
...

- Hosting : 로컬 커퓨터에 있는 Data를 Sever로 전달하도록 하는 행위

- 



































