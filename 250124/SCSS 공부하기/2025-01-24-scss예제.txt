* 2025 - 01 -24 (금) SCSS 예제*

html, css> 에러 투성이 나의 코드 > 어디서 무엇이 잘못되었는지 알 수가 없었음 > SCSS에서는 하나라도 틀리면 전혀 실행되지 않음 > Live Sass Compiler 확장자를 설치하면 됨

---------------------------------------------------------------------------

* SCSS사용하면서 자동으로 생성되는 CSS 파일에서 작성한 내용은
SCSS로 돌아와서 저장하는 순간 새로 저장되며 CSS 파일의 내용은 다 날라감.
SCSS 에서 무조건 작업 해야 함

---------------------------------------------------------------------------

SCSS 중요 문법 VS CSS에서 사용 할 수 없었던 문법

1. @at-root :  부모선택자 내 중첩상태에서 밖으로 나가는 기능

.frame {
  border: 2px solid #000;
  padding: 20px;
  text-align: center;
  @at-root.heading {
    font-size: 36px;
    color: crimson;
    font-weight: normal;
  }
}
// 최상위 root를 기준으로 .heading을 모두 찾아오겠다.


2. variable : 변수 기능 => :root 및 var() 불필요!

$main-red-color: crimson; 변수명 선언
color: $main-red-color; 변수 사용


3. @import : 굳이 url() 경로 작성 불필요!
직접 경로 주소 입력 가능

@import "./styles/variables.scss"


4. JS 산술연산자 모두 사용 가능 : + - * / % 모두 사용 가능
VS 기존 CSS 내 calc() 사용 불필요!

$main-font-size: 1.6rem;
font-size: $main-font-size * 5;


5. @mixin / @include : 스타일 그룹 설정 : 반복 및 공통으로 사용 될 것으로 판단되는 스타일을 하나 정의해놓고, 그때 그때마다 가져다가 사용 가능 함.

@mixin notice-button {스타일 그룹 설정}
.complete {
    @include notice-button;
}

--------------------------------------------

@include를 준 요소를 @mixin 안으로 끌어올 수도 있다.
@mixin notice-button {
	 &.complete:hover {
		속성값
	}
}

=> 각각의 스타일이 메인임 + 공통 스타일을 서브로 적용하는 개념임

--------------------------------------------

6. @extend : 공통 스타일이 메인이고 + 해당 스타일이 필요한 요소들을 불러 모으는 방식임.

.btn,
{
  width: 200px;
  height: 100%;
  padding: 7px;
  margin: 0 29px;
  cursor: pointer;
}

스타일을 만든 후

  .order {
    @extend .btn
    background: $main-red-color;
    color: $main-light-color;
  }
  .add {
    @extend .btn
    background: $main-blue-color;
    color: $main-light-color;
  }
  .checkout {
    @extend .btn
    background: $main-green-color;
    color: $main-light-color;
  }
}

처럼 안에 넣어준다

하단처럼 자동으로 넣어진다.

.btn,
body .checkout,
body .add,
body .order {
  width: 200px;
  height: 100%;
  padding: 7px;
  margin: 0 29px;
  cursor: pointer;
}

--------------------------------------------

7. @for : 반복문을 사용할 수 있음

@for $i from 1 through 9 {
  .frame {
    div:nth-child(#{$i}) {
      width: $main-font-size * 4 * $i;
    }
  }
}


--------------------------------------------

8. map-get : 객체 사용 가능































